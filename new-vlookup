import pandas as pd
from datetime import datetime
from openpyxl import load_workbook
from openpyxl.styles import PatternFill

# Load the CSV and Excel files
data_df = pd.read_csv('data.csv')
excel_df = pd.read_excel('All Subs Netguru Report.xlsx', sheet_name='Azure')

# ... (rest of the code for column name handling and merging)

# Ensure successful merge before proceeding
if 'Subscription ID' not in merged_df.columns:
    print("Error: 'Subscription ID' column not found in merged dataframe. Aborting.")
    exit()

# Create a new column with the desired date format and fill with 'Compliance Status'
date_column_name = 'Status ' + datetime.today().strftime('%m.%d.%Y')
merged_df[date_column_name] = merged_df['Compliance Status']

# Load the existing workbook and select the sheet
wb = load_workbook('All Subs Netguru Report.xlsx')
ws = wb['Azure']

# Define colors for highlighting
green_fill = PatternFill(start_color="00FF00", end_color="00FF00", fill_type="solid")
orange_fill = PatternFill(start_color="FFA500", end_color="FFA500", fill_type="solid")
red_fill = PatternFill(start_color="FF0000", end_color="FF0000", fill_type="solid")

# Get the column letter for today's status column (after successful merge)
try:
    today_column_letter = chr(65 + merged_df.columns.get_loc(date_column_name))
except KeyError:
    print("Error: Column named '{}' not found in merged dataframe. Skipping highlighting.".format(date_column_name))
    today_column_letter = None  # Set to None to avoid errors during highlighting

# Yesterday's logic (similar approach)
yesterday_date = datetime.today().strftime('%m.%d.%Y')
yesterday_column_name = 'Status ' + yesterday_date

if yesterday_column_name in merged_df.columns:
    try:
        yesterday_column_letter = chr(65 + merged_df.columns.get_loc(yesterday_column_name))
    except KeyError:
        print("Error: Column named '{}' not found in merged dataframe. Skipping highlighting for yesterday.".format(yesterday_column_name))
        yesterday_column_letter = None

# Apply the highlighting based on compliance status and comparison with yesterday's data
for row in range(2, ws.max_row + 1):  # Start from row 2 to skip the header
    if today_column_letter:  # Check if column exists before accessing
        current_status = ws[f"{today_column_letter}{row}"].value
        ws[f"{today_column_letter}{row}"].fill = green_fill if current_status == 'Compliant' else orange_fill

    if yesterday_column_letter and yesterday_column_name in merged_df.columns:
        previous_status = ws[f"{yesterday_column_letter}{row}"].value
        if previous_status != 'Non-Compliant' and current_status == 'Non-Compliant':
            ws[f"{today_column_letter}{row}"].fill = red_fill

# Save the updated workbook
wb.save('All Subs Netguru Report.xlsx')

print(f"Data has been successfully updated with a new column '{date_column_name}' (if successful merge) and highlighted based on the requirements.")
