import pandas as pd
from datetime import datetime
from openpyxl import load_workbook
from openpyxl.styles import PatternFill

# Load the CSV and Excel files
data_df = pd.read_csv('data.csv')
excel_df = pd.read_excel('All Subs Netguru Report.xlsx', sheet_name='Azure')

# Print the columns to check their names
print("Columns in data.csv:", data_df.columns)
print("Columns in All Subs Netguru Report.xlsx:", excel_df.columns)

# Rename columns if there are leading/trailing spaces or case differences
data_df.columns = data_df.columns.str.strip()
excel_df.columns = excel_df.columns.str.strip()

# If the 'Subscription ID' column is named differently, rename it
if 'subscription id' in data_df.columns.str.lower():
    data_df.rename(columns={col: 'Subscription ID' for col in data_df.columns if col.lower() == 'subscription id'}, inplace=True)

if 'subscription id' in excel_df.columns.str.lower():
    excel_df.rename(columns={col: 'Subscription ID' for col in excel_df.columns if col.lower() == 'subscription id'}, inplace=True)

# Ensure both dataframes are in the same case for comparison
data_df['Subscription ID'] = data_df['Subscription ID'].str.lower()
excel_df['Subscription ID'] = excel_df['Subscription ID'].str.lower()

# Merge the dataframes on the 'Subscription ID' column
merged_df = pd.merge(excel_df, data_df[['Subscription ID', 'Compliance Status']], on='Subscription ID', how='left')

# Create a new column with the desired date format and fill with 'Compliance Status'
date_column_name = 'Status ' + datetime.today().strftime('%m-%d-%Y')
merged_df[date_column_name] = merged_df['Compliance Status']

# Drop the extra 'Compliance Status' column used for merging
merged_df = merged_df.drop(columns=['Compliance Status'])

# Save the updated dataframe back to the Excel file
excel_writer = pd.ExcelWriter('All Subs Netguru Report.xlsx', engine='openpyxl', mode='a', if_sheet_exists='replace')
merged_df.to_excel(excel_writer, sheet_name='Azure', index=False)
excel_writer.save()

# Load the workbook and select the worksheet
wb = load_workbook('All Subs Netguru Report.xlsx')
ws = wb['Azure']

# Define the fill colors
green_fill = PatternFill(start_color='00FF00', end_color='00FF00', fill_type='solid')
orange_fill = PatternFill(start_color='FFA500', end_color='FFA500', fill_type='solid')
red_fill = PatternFill(start_color='FF0000', end_color='FF0000', fill_type='solid')

# Get the column names for today's and yesterday's status columns
yesterday_date = (datetime.today() - pd.DateOffset(days=1)).strftime('%m-%d-%Y')
yesterday_column_name = 'Status ' + yesterday_date
today_column_name = 'Status ' + datetime.today().strftime('%m-%d-%Y')

# Define the rows and columns to start from (assuming headers are in the first row)
start_row = 2
status_col = ws[today_column_name]
yesterday_col = ws[yesterday_column_name]

# Apply highlighting based on compliance status
for row in range(start_row, ws.max_row + 1):
    today_value = ws[f'{today_column_name}{row}'].value
    if today_value == 'Compliant':
        ws[f'{today_column_name}{row}'].fill = green_fill
    elif today_value == 'Non-Compliant':
        ws[f'{today_column_name}{row}'].fill = orange_fill
    
    # Compare today's and yesterday's data
    yesterday_value = ws[f'{yesterday_column_name}{row}'].value
    if yesterday_value != 'Non-Compliant' and today_value == 'Non-Compliant':
        ws[f'{today_column_name}{row}'].fill = red_fill

# Save the updated workbook
wb.save('All Subs Netguru Report.xlsx')

print(f"Data has been successfully updated with a new column '{today_column_name}' and highlights applied.")
